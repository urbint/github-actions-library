name: 'Docker Push to GCR'
description: 'Builds and pushes a Docker image to Google Container Registry'
inputs:
  tag:
    description: 'Tag for the Docker image (e.g., latest or commit SHA)'
    required: true
  gcr_sa_key:
    description: 'GCP Service Account JSON key for authentication'
    required: true
  dockerfile:
    description: 'Path to the Dockerfile (default: Dockerfile)'
    required: false
    default: 'Dockerfile'
  node-version:
    description: 'Node.js version to use'
    required: true
    default: '20' 
  registry-url:
    description: 'Registry URL for NPM packages'
    required: true
  node-auth-token:
    description: 'NPM Auth Token for accessing private packages'
    required: true
    default: '' 
  
  image_name:
    description: 'Name of the Docker image (default: my-frontend-image)'
    required: true
    default: 'my-frontend-image'


runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.gcr_sa_key }}
        token_format: "access_token"  

    - name: Log into Google Container Registry
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}

    - name: Install dependencies
      run: |
        yarn install
      env:
        NODE_AUTH_TOKEN: ${{ inputs.node-auth-token }}  
      shell: bash  

    - name: Build the application
      run: |
        yarn build  # Add the build step
      shell: bash  

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile }}  
        push: true
        tags: gcr.io/urbint-1259/${{ inputs.image_name }}:${{ inputs.tag }} 
