name: 'Run Migrations on Staging DB'
description: 'Runs migrations for the staging database of the world data service'

inputs:
  postgres_host:
    description: 'PostgreSQL host for staging DB'
    required: true
  postgres_user:
    description: 'PostgreSQL user for staging DB'
    required: true
  postgres_password:
    description: 'PostgreSQL password for staging DB'
    required: true
  postgres_db:
    description: 'PostgreSQL database for staging DB'
    required: true
  image_name:
    description: 'Docker image name for world data migration'
    required: true
  image_tag:
    description: 'Docker image tag for world data migration'
    required: true
  app_env:
    description: 'Application environment (e.g., staging, production)'
    required: true
  here_access_key_id:
    description: 'HERE API Access Key ID'
    required: true
  here_access_secret:
    description: 'HERE API Access Secret'
    required: true
  darksky_api_key:
    description: 'DarkSky API Key'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.gcr_sa_key }}
        token_format: "access_token"  

    - name: Log into Google Container Registry
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Run Migrations on Staging DB
      run: |
        docker run --rm \
          -e APP_ENV=${{ inputs.app_env }} \
          -e POSTGRES_HOST=${{ inputs.postgres_host }} \
          -e POSTGRES_USER=${{ inputs.postgres_user }} \
          -e POSTGRES_PASSWORD=${{ inputs.postgres_password }} \
          -e POSTGRES_DB=${{ inputs.postgres_db }} \
          -e HERE_ACCESS_KEY_ID=${{ inputs.here_access_key_id }} \
          -e HERE_ACCESS_SECRET=${{ inputs.here_access_secret }} \
          -e DARKSKY_API_KEY=${{ inputs.darksky_api_key }} \
          -w /app \
          gcr.io/urbint-1259/${{ inputs.migration_image_name }}:${{ inputs.migration_image_tag }} \
          world-data migrations upgrade head
      shell: bash