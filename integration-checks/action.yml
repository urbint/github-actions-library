name: Run Integration Checks

description: "Run integration checks including migrations, integration tests, and seed data tests"

inputs:
  repository:
    description: 'Repository to check out'
    required: true
    default: 'main-repo'
  postgres_host:
    description: 'PostgreSQL Host' 
    required: true
  postgres_user:
    description: 'PostgreSQL User'
    required: true
  postgres_pass:
    description: 'PostgreSQL Password'
    required: true
  postgres_db:
    description: 'PostgreSQL Database'
    required: true
  redis_host:
    description: 'Redis Host'
    required: true
  protocol_buffers_python_implementation:
    description: 'Protocol Buffers Python Implementation'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: test007

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m venv .venv
        . .venv/bin/activate
        python -m pip install --upgrade pip
        pip uninstall -y typing-extensions
        pip install typing-extensions==4.6.0
        pip install \
          alembic==1.13.1 \
          sqlalchemy==2.0.19 \
          ddtrace==2.8.5 \
          fastapi==0.105.0 \
          google-cloud-storage==2.15.0 \
          openpyxl==3.1.2 \
          pendulum==3.0.0 \
          asyncpg==0.29.0 \
          greenlet==3.0.1 \
          pydantic==1.10.13 \
          PyJWT[crypto]==2.8.0 \
          sqlalchemy2-stubs==0.0.2a38 \
          sqlmodel==0.0.11 \
          strawberry-graphql[fastapi]==0.219.2 \
          structlog==24.1.0 \
          typer==0.9.0 \
          uvicorn[standard]==0.25.0 \
          jsonpatch==1.33 \
          redis==5.0.1 \
          pyfailsafe==0.6.0 \
          httpx==0.27.0 \
          Brotli==1.1.0 \
          shapely==1.8.4 \
          tomli==2.0.1 \
          wrapt==1.16.0 \
          mmh3==4.1.0 \
          starlette==0.27.0 \
          launchdarkly-server-sdk==9.1.0 \
          google-auth==2.29.0 \
          protobuf==5.28.2 \
          firebase-admin==6.5.0 \
          black==23.12.1 \
          flake8==7.0.0 \
          isort==5.13.2 \
          mypy==1.7 \
          pydantic-factories==1.17.3 \
          pytest==7.4.3 \
          pytest-asyncio==0.23.5 \
          pytest-cov==4.1.0 \
          pytest-timeout==2.2.0 \
          pytest-xdist==3.5.0 \
          colorama==0.4.6 \
          tqdm==4.66.4 \
          types-certifi==2021.10.8 \
          pytest-rerunfailures==14.0 \
          types-redis==4.6.0.11 \
          types-pyyaml==6.0.12.12 \
          autohooks-plugin-black==23.10.0 \
          autohooks-plugin-mypy==23.10.0 \
          autohooks-plugin-isort==23.10.0 \
          autohooks-plugin-flake8==23.10.0 \
          types-pytz==2024.1.0.20240417 \
          typing-extensions==4.6.0 \
          typing-extensions==4.5.0 \
          mako==1.2.4 \
          markupsafe==2.1.3 \
          --no-deps
      shell: bash

    - name: List installed packages
      run: |
        . .venv/bin/activate
        pip freeze
      shell: bash

    - name: Run Migrations
      run: |
        . .venv/bin/activate
        alembic upgrade head
        alembic downgrade -1
      shell: bash
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}

    - name: Run Integration Tests
      run: |
        . .venv/bin/activate
        pytest --reruns 1 --durations=30 -n auto
        pytest -v tests/integration/test_example.py
      shell: bash
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: ${{ inputs.protocol_buffers_python_implementation }}

    - name: Run Seed Data Generation
      run: |
        . .venv/bin/activate
        python ./support/scripts/seed/main.py recreate-backup
        python ./support/scripts/seed/main.py restore-from-backup
      shell: bash
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: ${{ inputs.protocol_buffers_python_implementation }}
