name: Run Integration Checks

description: "Run integration checks including migrations, integration tests, and seed data tests"

inputs:
  repository:
    description: 'Repository to check out'
    required: true
    default: 'main-repo'
  postgres_host:
    description: 'PostgreSQL Host'
    required: true
  postgres_user:
    description: 'PostgreSQL User'
    required: true
  postgres_pass:
    description: 'PostgreSQL Password'
    required: true
  postgres_db:
    description: 'PostgreSQL Database'
    required: true
  redis_host:
    description: 'Redis Host'
    required: true
  protocol_buffers_python_implementation:
    description: 'Protocol Buffers Python Implementation'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: test007

    - name: Set up Python environment
      run: |
        python -m venv .venv
        . .venv/bin/activate
        python -m pip install --upgrade pip
        pip install --upgrade numpy  # Ensure numpy is upgraded
        pip install \
          async_timeout \  # Install async_timeout
          mmh3 \
          sqlmodel==0.0.11 \
          sqlalchemy==1.4.36 \
          pydantic==1.10.2 --no-deps \
          typing-extensions \
          strawberry-graphql \
          pendulum \
          alembic \
          pytest \
          redis \
          psycopg2-binary \
          protobuf \
          structlog \
          celery \
          Flask \
          requests \
          docker \
          pytest-django \
          pytest-redis \
          faker \
          factory_boy \
          pytest-cov \
          pytest-mock \
          black \
          flake8 \
          isort \
          coverage \
          fastapi \
          uvicorn \
          mako \
          markupsafe \
          tomli \
          pytest-xdist \
          werkzeug \
          starlette \
          jinja2 \
          httpx \
          aiohttp \
          mypy \
          pytest-factoryboy \
          python-dotenv \
          asyncpg \
          aiofiles \
          requests \
          pydantic[email] \
          gitpython \
          httptools \
          databases \
          websockets \
          alembic \
          sqlparse \
          email-validator \
          sqlalchemy-utils \
          sentry-sdk \
          httpcore \
          anyio \
          sniffio \
          sqlalchemy-continuum \
          graphql-core \
          jsonschema \
          pyjwt \
          celery[redis] \
          boto3 \
          pyyaml \
          python-multipart \
          pyodbc \
          opentelemetry-api \
          opentelemetry-sdk \
          opentelemetry-instrumentation \
          opentelemetry-exporter-jaeger \
          exceptiongroup \
          python-dateutil \
          six \
          shapely
      shell: bash

    - name: List installed packages
      run: |
        . .venv/bin/activate
        pip freeze
      shell: bash

    - name: Run Migrations
      run: |
        . .venv/bin/activate
        alembic upgrade head
        alembic downgrade -1
      shell: bash
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}

    - name: Run Integration Tests
      run: |
        . .venv/bin/activate
        pytest --reruns 1 --durations=30 -n auto
        pytest -v tests/integration/test_example.py
      shell: bash
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: ${{ inputs.protocol_buffers_python_implementation }}

    - name: Run Seed Data Generation
      run: |
        . .venv/bin/activate
        python ./support/scripts/seed/main.py recreate-backup
        python ./support/scripts/seed/main.py restore-from-backup
      shell: bash
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: ${{ inputs.protocol_buffers_python_implementation }}
