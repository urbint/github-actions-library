name: "Integration Checks"

description: "Run integration checks including migrations, integration tests, and seed data tests"

inputs:
  repository:
    description: 'Repository to check out'
    required: true
    default: 'main-repo'  # The main repository you want to checkout
  postgres_host:
    description: 'PostgreSQL Host'
    required: true
  postgres_user:
    description: 'PostgreSQL User'
    required: true
  postgres_pass:
    description: 'PostgreSQL Password'
    required: true
  postgres_db:
    description: 'PostgreSQL Database'
    required: true
  redis_host:
    description: 'Redis Host'
    required: true
  protocol_buffers_python_implementation:
    description: 'Protocol Buffers Python Implementation'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.repository }}
        ref: test007   # You can specify the branch you want to use

    - name: Set up Python environment
      run: |
        python -m venv .venv
        . .venv/bin/activate
        python -m pip install --upgrade pip
        # Install all required packages
        pip install alembic pytest redis psycopg2-binary protobuf structlog \
                    SQLAlchemy celery Flask requests docker pytest-django \
                    pytest-redis faker factory_boy pytest-cov pytest-mock \
                    black flake8 isort coverage fastapi uvicorn
      shell: bash  # Specify shell to use

    - name: Run Migrations
      run: |
        . .venv/bin/activate
        alembic upgrade head
        alembic downgrade -1
      shell: bash  # Specify shell to use
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}

    - name: Run Integration Tests
      run: |
        . .venv/bin/activate
        pytest --reruns 1 --durations=30 -n auto
        pytest -v tests/integration/test_example.py
      shell: bash  # Specify shell to use
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: ${{ inputs.protocol_buffers_python_implementation }}

    - name: Run Seed Data Generation
      run: |
        . .venv/bin/activate
        python ./support/scripts/seed/main.py recreate-backup
        python ./support/scripts/seed/main.py restore-from-backup
      shell: bash  # Specify shell to use
      env:
        POSTGRES_HOST: ${{ inputs.postgres_host }}
        POSTGRES_USER: ${{ inputs.postgres_user }}
        POSTGRES_PASS: ${{ inputs.postgres_pass }}
        POSTGRES_DB: ${{ inputs.postgres_db }}
        REDIS_HOST: ${{ inputs.redis_host }}
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: ${{ inputs.protocol_buffers_python_implementation }}
